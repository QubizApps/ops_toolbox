name: Integration Workflow

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    tags: [\d+.\d+.\d+]

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run linter
        uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: Dockerfile

  scan:
    name: Sonar Static Code Analysis
    needs: lint
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup scanner
        uses: warchant/setup-sonar-scanner@v3
      - name: Run scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_HOST }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.sources=.

  build:
    name: Docker Build and Push
    needs: lint
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    env:
      IMAGE_VERSION: latest
      IMAGE_NAME: '' #todo
      MESSAGE_WEBHOOK: ${{ secrets.TEAMS_WEBHOOK_URL }}
      REGISTRY_USER: ${{ secrets.DOCKER_HUB_USERNAME }} #todo
      REGISTRY_PASSWORD: ${{ secrets.DOCKER_HUB_TOKEN }} #todo
    steps:
      - uses: actions/checkout@v2

      - name: Set staging build
        if: startsWith(github.ref, 'refs/heads/main')
        run: |
          echo "IMAGE_VERSION=latest" >> $GITHUB_ENV

      - name: Set production build
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "IMAGE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Send build started message to MS Teams
        uses: dhollerbach/github-action-send-message-to-ms-teams@1.0.10
        with:
          webhook: ${{ env.MESSAGE_WEBHOOK }}
          message: 'Started building <b><a href=${{github.event.repository.html_url}}>${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}</a></b>'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          # Note the mode=max here
          # More: https://github.com/moby/buildkit#--export-cache-options
          # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Send build finished message to MS Teams
        uses: dhollerbach/github-action-send-message-to-ms-teams@1.0.10
        with:
          webhook: ${{ env.MESSAGE_WEBHOOK }}
          message: 'Finished building <b><a href=${{github.event.repository.html_url}}>${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}</a></b>'

      - name: Send build failed message to MS Teams
        if: ${{ failure() }}
        uses: dhollerbach/github-action-send-message-to-ms-teams@1.0.10
        with:
          webhook: ${{ env.MESSAGE_WEBHOOK }}
          message: '<b><a href=${{github.event.repository.html_url}}>${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}</a></b> *HAS FAILED!* Panic?'
